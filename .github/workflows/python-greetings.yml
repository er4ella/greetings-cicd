name: CI/CD pipeline for Python microservice

on:
  push:
    branches:
      - main

jobs:
  install-pip-deps:
    runs-on: self-hosted
    steps:
      - name: Install Python dependencies
        uses: ./.github/actions/install-python-deps
        with:
          repo: mtararujs/python-greetings
          path: python-greetings

  deploy-to-dev:
    runs-on: self-hosted
    needs: install-pip-deps
    steps:
      - name: Deploy to dev using composite action
        uses: ./.github/actions/deploy
        with:
          repo: mtararujs/python-greetings
          path: python-greetings
          env: dev
          port: 7001

  tests-on-dev:
    runs-on: self-hosted
    needs: deploy-to-dev
    steps:
      - name: Checkout CI/CD repo
        uses: actions/checkout@v4

      - name: Print testing message
        run: echo "Running tests on dev environment"

      - name: Checkout course-js-api-framework repo
        uses: actions/checkout@v4
        with:
          repository: mtararujs/course-js-api-framework
          path: course-tests

      - name: Install test dependencies
        working-directory: course-tests
        run: npm install

      - name: Run dev tests
        working-directory: course-tests
        run: npm run greetings greetings_dev
  
  deploy-to-staging:
    runs-on: self-hosted
    needs: tests-on-dev
    steps:
      - name: Deploy to staging using composite action
        uses: ./.github/actions/deploy
        with:
          repo: mtararujs/python-greetings
          path: python-greetings
          env: staging
          port: 7002

  tests-on-staging:
    runs-on: self-hosted
    needs: deploy-to-staging
    steps:
      - name: Checkout CI/CD repo
        uses: actions/checkout@v4

      - name: Print testing message
        run: echo "Running tests on staging environment"

      - name: Checkout course-js-api-framework repo
        uses: actions/checkout@v4
        with:
          repository: mtararujs/course-js-api-framework
          path: course-tests

      - name: Install test dependencies
        working-directory: course-tests
        run: npm install

      - name: Run staging tests
        working-directory: course-tests
        run: npm run greetings greetings_staging

  deploy-to-preprod:
    runs-on: self-hosted
    needs: tests-on-staging
    steps:
      - name: Deploy to preprod using composite action
        uses: ./.github/actions/deploy
        with:
          repo: mtararujs/python-greetings
          path: python-greetings
          env: preprod
          port: 7003

  tests-on-preprod:
    runs-on: self-hosted
    needs: deploy-to-preprod
    steps:
      - name: Checkout CI/CD repo
        uses: actions/checkout@v4

      - name: Print testing message
        run: echo "Running tests on preprod environment"

      - name: Checkout course-js-api-framework repo
        uses: actions/checkout@v4
        with:
          repository: mtararujs/course-js-api-framework
          path: course-tests

      - name: Install test dependencies
        working-directory: course-tests
        run: npm install

      - name: Run preprod tests
        working-directory: course-tests
        run: npm run greetings greetings_preprod

  deploy-to-prod:
    runs-on: self-hosted
    needs: tests-on-preprod
    steps:
      - name: Deploy to prod using composite action
        uses: ./.github/actions/deploy
        with:
          repo: mtararujs/python-greetings
          path: python-greetings
          env: prod
          port: 7004

  tests-on-prod:
    runs-on: self-hosted
    needs: deploy-to-prod
    steps:
      - name: Checkout CI/CD repo
        uses: actions/checkout@v4

      - name: Print testing message
        run: echo "Running tests on prod environment"

      - name: Checkout course-js-api-framework repo
        uses: actions/checkout@v4
        with:
          repository: mtararujs/course-js-api-framework
          path: course-tests

      - name: Install test dependencies
        working-directory: course-tests
        run: npm install

      - name: Run prod tests
        working-directory: course-tests
        run: npm run greetings greetings_prod